# Important note:
#   The properties 'isv.payment.customer.*' contains customer specific configuration and MUST be overridden.
#   Please check the documentation.

# Specifies the location of the spring context file putted automatically to the global platform application context.
isvpayment.application-context=isvpayment-spring.xml

# SOAP WS URL
isv.payment.ws.endpoint.address=https://ics2wstesta.ic3.com:443/commerce/1.x/transactionProcessor
# If a new wsdl location is required to override default supplied
isv.payment.ws.wsdl.location=classpath:META-INF/wsdl/CyberSourceTransaction_1.141.wsdl

# REST API URL
isv.payment.api.rest.runEnvironment=apitest.cybersource.com

# Logging to be enabled or not.
# Please prefer using the logging for test purposes only
isv.payment.api.rest.enableLog=false
isv.payment.api.rest.logDirectory=${HYBRIS_LOG_DIR}/isv
isv.payment.api.rest.logFilename=isv.log
isv.payment.api.rest.logMaximumSize=5M

# ISV REST API Http client default configuration
isv.payment.api.rest.httpClient.connectionTimeout=15000
isv.payment.api.rest.httpClient.readTimeout=15000
isv.payment.api.rest.httpClient.maxConnectionsTotal=30
isv.payment.api.rest.httpClient.defaultConnectionsPerRoute=10

# Log4J settings are used for logging output
# payment commands logger settings
log4j2.logger.payment-service.name=isv.payment.sap.payment.service.executor
log4j2.logger.payment-service.level=debug

# payment commands logger settings
log4j2.logger.payment-report.name=isv.payment.sap.payment.report.executor
log4j2.logger.payment-report.level=debug

# logging of raw SOAP message, put to debug for troubleshooting
log4j2.logger.isv-soap-logging.name=isv.payment.sap.payment.logging.LoggingHandler
log4j2.logger.isv-soap-logging.name=isv.cjl.payment.logging.LoggingHandler
log4j2.logger.isv-soap-logging.level=info

ext.isvpayment.extension.usemaven=true

# Please contact your ISV Account representative to obtain a value for these fields
isv.payment.customer.request.developer.id=<merchantID>
isv.payment.customer.request.partnerSolution.id=6THOIFY5

# The environment the code base is running on. Please update accordingly
isv.payment.customer.request.client.environment=<environment>
isv.payment.customer.request.client.library=ISV SAP Commerce Extension

# Fraud-management device fingerprint configuration
isv.payment.fraud.device.finger.print.orgId=<orgId>

# Tax calculation service defaults (if Tax service used)
isv.payment.customer.product.code.default=PC040100
isv.payment.customer.product.code.shipping=FR020100
isv.payment.customer.product.code.tax.default=default
isv.payment.customer.product.code.tax.shipping=default
isv.payment.customer.tax.code.seller.registration=<seller_registration>

# HTTP_Signature = http_signature and JWT = jwt
isv.payment.api.rest.authenticationType=http_signature

# CreditCard Configuration
isv.payment.customer.processing.level.VISA=OMNIPAY_DIRECT.L2
isv.payment.customer.processing.level.MASTERCARD_EUROCARD=OMNIPAY_DIRECT.L3
isv.payment.customer.processing.level.AMEX=AMERICAN_EXPRESS_DIRECT.L2

# 3D Secure
isv.payment.customer.3ds.songbird.url=https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js
isv.payment.customer.3ds.jwt.api.key=<3ds Api Key>
isv.payment.customer.3ds.jwt.api.orgUnitId=<3ds orgUnit ID>
isv.payment.customer.3ds.jwt.api.id=<3ds api ID>
#isv.payment.customer.3ds.<merchant_id>.enabled=true

# Flex Microform
isv.payment.flex.microform.sdk.url=https://flex.cybersource.com/cybersource/assets/microform/0.11.0/flex-microform.min.js
isv.payment.customer.flex.microform.api.key.id=<api key ID>
isv.payment.customer.flex.microform.shared.secret=<shared secret key>
isv.payment.customer.flex.microform.api.env=SANDBOX
isv.payment.flex.card.type.selection=false

# HOP
isv.payment.secure.acceptance.hop.post.url=https://testsecureacceptance.cybersource.com/pay
isv.payment.secure.acceptance.hop.subscription.create.post.url=https://testsecureacceptance.cybersource.com/embedded/token/create

# SOP
isv.payment.secure.acceptance.sop.post.url=https://testsecureacceptance.cybersource.com/silent/embedded/pay

# Reporting
isv.payment.report.singleTransaction.transactionSearch.sort=id:asc,submitTimeUtc:asc
isv.payment.report.singleTransaction.transactionSearch.searchName=MRN
isv.payment.report.singleTransaction.transactionSearch.offset=0
isv.payment.report.singleTransaction.transactionSearch.limit=100
isv.payment.report.conversion.daily.reportName=ConversionDetailReport_Daily_Classic

# Alternative payments check status configuration. Frequency is specified in seconds.
#
# NOTE: these are some overrides. For the full list of Alternative payments check status configuration
# properties please check CJL config.properties

# PayPal
isv.payment.paypal.cancelReturn.url=/checkout/multi/summary/view
isv.payment.paypal.return.url=/checkout/payment/paypal/handleResponse
isv.payment.paypal.sandbox.url=
isv.payment.alternativePayment.checkStatus.PPL.AUTHORIZATION.frequency=0,21600,43200,64800,86400,108000
isv.payment.alternativePayment.checkStatus.PPL.CAPTURE.frequency=0,21600,43200,64800,86400,108000
isv.payment.alternativePayment.checkStatus.PPL.REFUND.frequency=0,21600,43200,64800,86400,108000
isv.payment.alternativePayment.checkStatus.PPL.SALE.frequency=0,21600,43200,64800,86400,108000

# Alternative payments check status configuration. Frequency is specified in seconds.
#
# NOTE: these are some overrides. For the full list of Alternative payments check status configuration
# properties please check CJL config.properties

# Alipay
isv.payment.alternativePayment.checkStatus.APY.INITIATE.frequency=0,3600,14400,43200
isv.payment.alternativePayment.checkStatus.AYM.INITIATE.frequency=0,3600,14400,43200

# Apple Pay
isv.payment.applepay.initiative=web
# Available decryption types 'ISV_PAYMENT', 'MERCHANT'
isv.payment.customer.applepay.decryption.type=ISV_PAYMENT

# The following properties MUST be overridden. Please check documentation
isv.payment.customer.applepay.merchant.identifier=<merchant identifier>
isv.payment.customer.applepay.apparel-de.initiative.context=<merchantID>
isv.payment.customer.applepay.apparel-uk.initiative.context=<merchantID>

# Sample keystores: 'isvpaymentaddon/applepay/keystores/isvDecryption/applePayMerchantId.jks' or 'isvpaymentaddon/applepay/keystores/merchDecryption/applePayMerchDecryption.jks'
isv.payment.customer.applepay.keystore.location=isvpaymentaddon/applepay/keystores/merchDecryption/applePayMerchDecryption.jks
isv.payment.customer.applepay.keystore.password=<apple pay pwd>
isv.payment.customer.applepay.merchantidentity.key.password=<apple pay pwd>
isv.payment.customer.applepay.payment.privatekey.alias=<private key alias>
isv.payment.customer.applepay.payment.privatekey.password=<apple pay pwd>
isv.payment.customer.applepay.payment.expiration.time=-1

# Alternative payments check status configuration. Frequency is specified in seconds.
#
# NOTE: these are some overrides. For the full list of Alternative payments check status configuration
# properties please check CJL config.properties

# Bancontact
isv.payment.alternativePayment.checkStatus.MCH.SALE.frequency=0,300,1200

# Google Pay
# Google pay merchant ID (see https://developers.google.com/pay/api/web/guides/test-and-deploy/request-prod-access)
isv.payment.customer.googlepay.merchant.id=<merchant_id>

# Google Pay environment. Possible values: TEST, PRODUCTION
isv.payment.customer.googlepay.environment=TEST

# Alternative payments check status configuration. Frequency is specified in seconds.
#
# NOTE: these are some overrides. For the full list of Alternative payments check status configuration
# properties please check CJL config.properties

# iDEAL
isv.payment.alternativePayment.checkStatus.IDL.SALE.frequency=0,300,1200

# Klarna
klarna.sdk.url=https://x.klarnacdn.net/kp/lib/v1/api.js
klarna.success.url=http://klarna-success.com
klarna.cancel.url=http://klarna-cancel.com
klarna.failure.url=http://klarna-error.com
klarna.language.apparel-de=de-DE
klarna.language.apparel-uk=en-GB

# Alternative payments check status configuration. Frequency is specified in seconds.
#
# NOTE: these are some overrides. For the full list of Alternative payments check status configuration
# properties please check CJL config.properties

# Sofort
isv.payment.alternativePayment.checkStatus.SOF.SALE.frequency=0,900,1800,2700,3600,4500,5400,6300,7200,8100,9000,9900,10800,11700,12600,13500,14400,15300,16200,17100,18000,18900,19800,20700,21600,36000,122400,208800,295200,381600,468000,554400,640800,727200,813600,900000

# Visa Checkout
isv.payment.clicktopay.sdk.url=https://sandbox-assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js
isv.payment.clicktopay.image.url=https://sandbox.secure.checkout.visa.com/wallet-services-web/xo/button.png?legacy=false

# Alternative payments check status configuration. Frequency is specified in seconds.
#
# NOTE: these are some overrides. For the full list of Alternative payments check status configuration
# properties please check CJL config.properties

# WeChat
isv.payment.alternativePayment.checkStatus.WQR.SALE.frequency=5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
isv.payment.alternativePayment.checkStatus.WQR.CHECK_STATUS.frequency=5000
isv.payment.alternativepayment.weChat.sale.timeout=360
site.pci.strategy = FLEX

isv.payment.paymentAcceptance.type = auth

# HTTP Parameters
# The credentials below MUST be provided in case "isv.payment.api.rest.authenticationType=http_signature"
isv.payment.api.rest.<merchantID>.merchantKeyId = <api key ID>
isv.payment.api.rest.<merchantID>.merchantsecretKey = <shared secret key>

# JWT Parameters
# The credentials below MUST be provided in case "isv.payment.api.rest.authenticationType=jwt"
isv.payment.api.rest.<merchantID>.keyAlias = <merchantID>
isv.payment.api.rest.<merchantID>.keyPass = <merchantID>
isv.payment.api.rest.<merchantID>.keyFileName = <merchantID>
# P12 key path. Enter the folder path where the .p12 file is located.
isv.payment.api.rest.<merchantID>.keysDirectory = isvpayment/keys

#Email Configuration
mail.smtp.server=smtp.gmail.com
mail.smtp.port=587 
mail.smtp.user= <your gmail ID>
mail.smtp.password= <your password>
mail.use.tls=true 
mail.smtp.starttls.enable=true
